{"version":3,"sources":["components/TodoItem.module.css","components/TodoList.js","redux/reducers/todoReducer.js","redux/store.js","components/TodoForm.js","redux/actions/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","mapStateToProps","state","connect","props","console","log","map","todo","id","onClick","className","isCompleted","classes","listItem","opacity","join","text","completed","delete","button","todoReducer","action","type","payload","filter","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","useState","setTodo","container","form","onSubmit","e","preventDefault","dispatch","uuidv4","value","onChange","target","input","placeholder","disabled","currentTarget","parentElement","todos","App","style","textDecoration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c422605.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoItem_container__6kkP_\",\"form\":\"TodoItem_form__IoxI9\",\"input\":\"TodoItem_input__3Bbr0\",\"button\":\"TodoItem_button__17Hor\",\"listItem\":\"TodoItem_listItem__12Gcj\",\"completed\":\"TodoItem_completed__3Uons\",\"opacity\":\"TodoItem_opacity__2Vzju\"};","import React from \"react\";\r\nimport classes from \"../components/TodoItem.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TodoList = (props) => {\r\n  console.log(props.state);\r\n  return (\r\n    <ul>\r\n      {props.state.map((todo) => {\r\n        return (\r\n          <div\r\n            id={todo.id}\r\n            onClick={props.onClick}\r\n            key={todo.id}\r\n            className={\r\n              todo.isCompleted\r\n                ? [classes.listItem, classes.opacity].join(\" , \")\r\n                : classes.listItem\r\n            }\r\n          >\r\n            <li>{todo.text}</li>\r\n            <div\r\n              className={\r\n                todo.isCompleted ? [classes.completed].join(\" , \") : \"\"\r\n              }\r\n            ></div>\r\n            <button onClick={props.delete} className={classes.button}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    state,\r\n  };\r\n}\r\nmapStateToProps();\r\n\r\nexport default connect(mapStateToProps)(TodoList);\r\n","const todoReducer = (state = [], action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.payload.id,\r\n          text: action.payload.text,\r\n          isCompleted: false,\r\n        },\r\n      ];\r\n    case \"TOGGLE_TODO\":\r\n      return state.map((todo) => {\r\n        return todo.id === action.id\r\n          ? { ...todo, isCompleted: !todo.isCompleted }\r\n          : todo;\r\n      });\r\n    case \"DELETE_TODO\":\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { createStore } from \"redux\";\r\nimport todoReducer from \"./reducers/todoReducer\";\r\n\r\nconst persistedState = localStorage.getItem(\"reduxState\")\r\n  ? JSON.parse(localStorage.getItem(\"reduxState\"))\r\n  : [];\r\n\r\nconst store = createStore(todoReducer, persistedState);\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./TodoItem.module.css\";\r\nimport TodoList from \"./TodoList\";\r\nimport { addTodo, toggleTodo, deleteTodo } from \"../redux/actions/index\";\r\nimport store from \"../redux/store\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TodoForm = (props) => {\r\n  console.log(\"TODO FORM PROPS\", props);\r\n\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  console.log(\"REDUX STORE\", store.getState());\r\n\r\n  const toggleTodoHandler = (e) => {\r\n    console.log(\"inside toggle handler form\", e.currentTarget.id);\r\n\r\n    store.dispatch(toggleTodo(e.currentTarget.id));\r\n  };\r\n\r\n  const todoHandler = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const deleteHandler = (e) => {\r\n    store.dispatch(deleteTodo(e.currentTarget.parentElement.id));\r\n    console.log(e.currentTarget.parentElement.id);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    store.dispatch(addTodo(todo, uuidv4(), true));\r\n\r\n    setTodo(\"\");\r\n  };\r\n  return (\r\n    <div className={classes.container}>\r\n      <form className={classes.form} onSubmit={submitHandler} action=\"submit\">\r\n        <input\r\n          value={todo}\r\n          onChange={todoHandler}\r\n          className={classes.input}\r\n          type=\"text\"\r\n          placeholder=\"todo...\"\r\n        ></input>\r\n\r\n        <button disabled={!todo} className={classes.button}>\r\n          +\r\n        </button>\r\n      </form>\r\n\r\n      <TodoList\r\n        onClick={toggleTodoHandler}\r\n        delete={deleteHandler}\r\n        todos={props.state}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state: state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoForm);\r\n","export const addTodo = (text, id, isCompleted) => {\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    payload: {\r\n      text,\r\n      id,\r\n      isCompleted,\r\n    },\r\n  };\r\n};\r\n\r\nexport const toggleTodo = (id) => {\r\n  return {\r\n    type: \"TOGGLE_TODO\",\r\n    id,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return {\r\n    type: \"DELETE_TODO\",\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n","import \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\n// import store from \"./redux/store\";\n// import TodoList from './components/TodoList';\n\nfunction App() {\n  // console.log(store.getState());\n\n  // store.dispatch({\n  //   type: \"BUG_ADDED\",\n  //   payload: {\n  //     description: \"BUG 2\",\n  //   },\n  // });\n\n  // store.dispatch({\n  //   type: \"BUG_REMOVED\",\n  //   payload: {\n  //     id: 1,\n  //   },\n  // });\n  // console.log(store.getState());\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\" style={{ textDecoration: \"underline\" }}>\n        To do app with Redux\n      </h1>\n      <TodoForm />\n      {/* <TodoList/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nimport { Provider } from \"react-redux\";\n\nstore.getState();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}